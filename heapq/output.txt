Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0)]
Tentative: {(0, 0): []}
Position: (0, 1)
  (0, 1): [(0, 0)]
Position: (1, 0)
  (1, 0): [(0, 0)]
Position: (1, 1)
  (1, 1): [(0, 0)]
Current: (0, 0)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
Candidates:
  (0, 1) (priority 1)
  (1, 0) (priority 1)
  (1, 1) (priority 1)
Certain: {(0, 0)}
Neighbors: {(0, 1), (1, 0), (1, 1)}
Current path:
@......X..
.......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (0, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)]}
Position: (1, 0)
Position: (0, 2)
  (0, 2): [(0, 0), (0, 1)]
Position: (1, 1)
Current: (0, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
Candidates:
  (1, 0) (priority 1)
  (1, 1) (priority 1)
  (0, 2) (priority 2)
Certain: {(0, 1), (0, 0)}
Neighbors: {(1, 0), (0, 2), (1, 1)}
Current path:
@......X..
@......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)]}
Position: (1, 1)
Position: (2, 0)
  (2, 0): [(0, 0), (1, 0)]
Position: (2, 1)
  (2, 1): [(0, 0), (1, 0)]
Current: (1, 0)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
Candidates:
  (1, 1) (priority 1)
  (0, 2) (priority 2)
  (2, 0) (priority 2)
  (2, 1) (priority 2)
Certain: {(0, 1), (1, 0), (0, 0)}
Neighbors: {(1, 1), (2, 0), (2, 1)}
Current path:
@@.....X..
.......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)]}
Position: (0, 2)
Position: (2, 0)
Position: (2, 1)
Position: (2, 2)
  (2, 2): [(0, 0), (1, 1)]
Current: (1, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
Candidates:
  (0, 2) (priority 2)
  (2, 1) (priority 2)
  (2, 0) (priority 2)
  (2, 2) (priority 2)
Certain: {(0, 1), (1, 0), (1, 1), (0, 0)}
Neighbors: {(0, 2), (2, 0), (2, 1), (2, 2)}
Current path:
@......X..
.@.....X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (0, 1), (0, 2)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)]}
Position: (0, 3)
  (0, 3): [(0, 0), (0, 1), (0, 2)]
Position: (1, 3)
  (1, 3): [(0, 0), (0, 1), (0, 2)]
Current: (0, 2)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
Candidates:
  (2, 0) (priority 2)
  (2, 1) (priority 2)
  (2, 2) (priority 2)
  (0, 3) (priority 3)
  (1, 3) (priority 3)
Certain: {(0, 1), (0, 0), (1, 1), (0, 2), (1, 0)}
Neighbors: {(0, 3), (1, 3)}
Current path:
@......X..
@......X..
@X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)]}
Position: (3, 1)
  (3, 1): [(0, 0), (1, 0), (2, 0)]
Position: (2, 1)
Position: (3, 0)
  (3, 0): [(0, 0), (1, 0), (2, 0)]
Current: (2, 0)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
Candidates:
  (2, 1) (priority 2)
  (0, 3) (priority 3)
  (2, 2) (priority 2)
  (1, 3) (priority 3)
  (3, 1) (priority 3)
  (3, 0) (priority 3)
Certain: {(0, 1), (0, 0), (1, 1), (2, 0), (0, 2), (1, 0)}
Neighbors: {(3, 1), (2, 1), (3, 0)}
Current path:
@@@....X..
.......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)]}
Position: (3, 1)
Position: (2, 2)
Position: (3, 0)
Current: (2, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
Candidates:
  (2, 2) (priority 2)
  (0, 3) (priority 3)
  (3, 0) (priority 3)
  (1, 3) (priority 3)
  (3, 1) (priority 3)
Certain: {(0, 1), (2, 1), (0, 0), (1, 1), (2, 0), (0, 2), (1, 0)}
Neighbors: {(3, 1), (2, 2), (3, 0)}
Current path:
@@.....X..
..@....X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)]}
Position: (3, 1)
Position: (1, 3)
Position: (3, 3)
  (3, 3): [(0, 0), (1, 1), (2, 2)]
Position: (2, 3)
  (2, 3): [(0, 0), (1, 1), (2, 2)]
Current: (2, 2)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
Candidates:
  (0, 3) (priority 3)
  (1, 3) (priority 3)
  (2, 3) (priority 3)
  (3, 1) (priority 3)
  (3, 3) (priority 3)
  (3, 0) (priority 3)
Certain: {(0, 1), (2, 1), (0, 0), (1, 1), (2, 0), (0, 2), (2, 2), (1, 0)}
Neighbors: {(3, 1), (1, 3), (3, 3), (2, 3)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (0, 1), (0, 2), (0, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)]}
Position: (1, 3)
Position: (1, 4)
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
Position: (0, 4)
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
Current: (0, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
Candidates:
  (1, 3) (priority 3)
  (3, 0) (priority 3)
  (2, 3) (priority 3)
  (3, 1) (priority 3)
  (3, 3) (priority 3)
  (1, 4) (priority 4)
  (0, 4) (priority 4)
Certain: {(0, 1), (2, 1), (0, 0), (1, 1), (0, 3), (2, 0), (0, 2), (2, 2), (1, 0)}
Neighbors: {(1, 3), (1, 4), (0, 4)}
Current path:
@......X..
@......X..
@X.XXXXX..
@.........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (0, 1), (0, 2), (1, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]}
Position: (2, 3)
Position: (0, 4)
Position: (1, 4)
Current: (1, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
Candidates:
  (2, 3) (priority 3)
  (3, 0) (priority 3)
  (0, 4) (priority 4)
  (3, 1) (priority 3)
  (3, 3) (priority 3)
  (1, 4) (priority 4)
Certain: {(0, 1), (2, 1), (0, 0), (1, 1), (0, 3), (2, 0), (0, 2), (2, 2), (1, 0), (1, 3)}
Neighbors: {(2, 3), (0, 4), (1, 4)}
Current path:
@......X..
@......X..
@X.XXXXX..
.@........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (2, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]}
Position: (3, 3)
Position: (3, 4)
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
Position: (1, 4)
Current: (2, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
Candidates:
  (3, 0) (priority 3)
  (3, 1) (priority 3)
  (0, 4) (priority 4)
  (1, 4) (priority 4)
  (3, 3) (priority 3)
  (3, 4) (priority 4)
Certain: {(0, 1), (2, 1), (0, 0), (1, 1), (0, 3), (2, 0), (2, 3), (0, 2), (2, 2), (1, 0), (1, 3)}
Neighbors: {(3, 3), (3, 4), (1, 4)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
..@.......
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 0)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]}
Position: (3, 1)
Position: (4, 0)
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
Position: (4, 1)
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
Current: (3, 0)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
Candidates:
  (3, 1) (priority 3)
  (3, 3) (priority 3)
  (0, 4) (priority 4)
  (1, 4) (priority 4)
  (3, 4) (priority 4)
  (4, 0) (priority 4)
  (4, 1) (priority 4)
Certain: {(0, 1), (2, 1), (0, 0), (1, 1), (0, 3), (2, 0), (3, 0), (2, 3), (0, 2), (2, 2), (1, 0), (1, 3)}
Neighbors: {(3, 1), (4, 0), (4, 1)}
Current path:
@@@@...X..
.......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]}
Position: (4, 0)
Position: (4, 1)
Current: (3, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
Candidates:
  (3, 3) (priority 3)
  (1, 4) (priority 4)
  (0, 4) (priority 4)
  (4, 1) (priority 4)
  (3, 4) (priority 4)
  (4, 0) (priority 4)
Certain: {(0, 1), (2, 1), (0, 0), (3, 1), (1, 1), (0, 3), (2, 0), (3, 0), (2, 3), (0, 2), (2, 2), (1, 0), (1, 3)}
Neighbors: {(4, 0), (4, 1)}
Current path:
@@@....X..
...@...X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]}
Position: (4, 4)
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
Position: (3, 4)
Position: (4, 3)
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
Current: (3, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
Candidates:
  (0, 4) (priority 4)
  (1, 4) (priority 4)
  (4, 0) (priority 4)
  (4, 1) (priority 4)
  (3, 4) (priority 4)
  (4, 4) (priority 4)
  (4, 3) (priority 4)
Certain: {(0, 1), (2, 1), (0, 0), (3, 1), (1, 1), (0, 3), (2, 0), (3, 0), (2, 3), (0, 2), (3, 3), (2, 2), (1, 0), (1, 3)}
Neighbors: {(4, 4), (3, 4), (4, 3)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@......
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (0, 1), (0, 2), (0, 3), (0, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]}
Position: (1, 4)
Current: (0, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
Candidates:
  (1, 4) (priority 4)
  (3, 4) (priority 4)
  (4, 0) (priority 4)
  (4, 1) (priority 4)
  (4, 3) (priority 4)
  (4, 4) (priority 4)
Certain: {(0, 1), (0, 4), (2, 1), (0, 0), (3, 1), (1, 1), (0, 3), (2, 0), (3, 0), (2, 3), (0, 2), (3, 3), (2, 2), (1, 0), (1, 3)}
Neighbors: {(1, 4)}
Current path:
@......X..
@......X..
@X.XXXXX..
@.........
@.X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (0, 1), (0, 2), (0, 3), (1, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]}
Current: (1, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
Candidates:
  (3, 4) (priority 4)
  (4, 1) (priority 4)
  (4, 0) (priority 4)
  (4, 4) (priority 4)
  (4, 3) (priority 4)
Certain: {(0, 1), (0, 4), (2, 1), (0, 0), (3, 1), (1, 1), (0, 3), (2, 0), (1, 4), (3, 0), (2, 3), (0, 2), (3, 3), (2, 2), (1, 0), (1, 3)}
Neighbors: set()
Current path:
@......X..
@......X..
@X.XXXXX..
@.........
.@X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (2, 3), (3, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]}
Position: (4, 4)
Position: (4, 3)
Current: (3, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
Candidates:
  (4, 0) (priority 4)
  (4, 1) (priority 4)
  (4, 3) (priority 4)
  (4, 4) (priority 4)
Certain: {(0, 1), (0, 4), (2, 1), (3, 4), (0, 0), (3, 1), (1, 1), (0, 3), (2, 0), (1, 4), (3, 0), (2, 3), (0, 2), (3, 3), (2, 2), (1, 0), (1, 3)}
Neighbors: {(4, 4), (4, 3)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
..@.......
..X@....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]}
Position: (5, 0)
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
Position: (5, 1)
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
Position: (4, 1)
Current: (4, 0)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
Candidates:
  (4, 1) (priority 4)
  (4, 4) (priority 4)
  (4, 3) (priority 4)
  (5, 0) (priority 5)
  (5, 1) (priority 5)
Certain: {(0, 1), (4, 0), (0, 4), (2, 1), (3, 4), (0, 0), (3, 1), (1, 1), (0, 3), (2, 0), (1, 4), (3, 0), (2, 3), (0, 2), (3, 3), (2, 2), (1, 0), (1, 3)}
Neighbors: {(5, 0), (5, 1), (4, 1)}
Current path:
@@@@@..X..
.......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 0), (4, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]}
Position: (5, 0)
Position: (5, 1)
Current: (4, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
Candidates:
  (4, 3) (priority 4)
  (4, 4) (priority 4)
  (5, 1) (priority 5)
  (5, 0) (priority 5)
Certain: {(4, 0), (3, 4), (3, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (0, 1), (0, 4), (2, 1), (4, 1), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3)}
Neighbors: {(5, 0), (5, 1)}
Current path:
@@@@...X..
....@..X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]}
Position: (4, 4)
Position: (5, 3)
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
Position: (5, 4)
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
Current: (4, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
Candidates:
  (4, 4) (priority 4)
  (5, 0) (priority 5)
  (5, 1) (priority 5)
  (5, 3) (priority 5)
  (5, 4) (priority 5)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (0, 1), (0, 4), (2, 1), (4, 1), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3)}
Neighbors: {(4, 4), (5, 3), (5, 4)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@.....
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]}
Position: (5, 3)
Position: (5, 4)
Current: (4, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
Candidates:
  (5, 0) (priority 5)
  (5, 3) (priority 5)
  (5, 1) (priority 5)
  (5, 4) (priority 5)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (0, 1), (0, 4), (2, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3)}
Neighbors: {(5, 3), (5, 4)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@......
..X.@...X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]}
Position: (6, 1)
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
Position: (5, 1)
Position: (6, 0)
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
Current: (5, 0)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
Candidates:
  (5, 1) (priority 5)
  (5, 3) (priority 5)
  (5, 4) (priority 5)
  (6, 1) (priority 6)
  (6, 0) (priority 6)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (0, 1), (0, 4), (2, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3)}
Neighbors: {(6, 1), (5, 1), (6, 0)}
Current path:
@@@@@@.X..
.......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]}
Position: (6, 1)
Position: (6, 0)
Current: (5, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
Candidates:
  (5, 3) (priority 5)
  (6, 0) (priority 6)
  (5, 4) (priority 5)
  (6, 1) (priority 6)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (0, 1), (0, 4), (2, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3)}
Neighbors: {(6, 1), (6, 0)}
Current path:
@@@@@..X..
.....@.X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]}
Position: (5, 4)
Position: (6, 3)
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
Position: (6, 4)
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
Current: (5, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
Candidates:
  (5, 4) (priority 5)
  (6, 0) (priority 6)
  (6, 1) (priority 6)
  (6, 3) (priority 6)
  (6, 4) (priority 6)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3)}
Neighbors: {(5, 4), (6, 3), (6, 4)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@@....
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]}
Position: (6, 3)
Position: (6, 4)
Current: (5, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
Candidates:
  (6, 0) (priority 6)
  (6, 3) (priority 6)
  (6, 1) (priority 6)
  (6, 4) (priority 6)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3)}
Neighbors: {(6, 3), (6, 4)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@.....
..X..@..X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]}
Position: (6, 1)
Current: (6, 0)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
Candidates:
  (6, 1) (priority 6)
  (6, 3) (priority 6)
  (6, 4) (priority 6)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0)}
Neighbors: {(6, 1)}
Current path:
@@@@@@@X..
.......X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]}
Current: (6, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
Candidates:
  (6, 3) (priority 6)
  (6, 4) (priority 6)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (6, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0)}
Neighbors: set()
Current path:
@@@@@@.X..
......@X..
.X.XXXXX..
..........
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]}
Position: (7, 4)
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
Position: (6, 4)
Position: (7, 3)
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
Current: (6, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
Candidates:
  (6, 4) (priority 6)
  (7, 4) (priority 7)
  (7, 3) (priority 7)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (6, 1), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(7, 4), (6, 4), (7, 3)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@@@...
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]}
Position: (7, 4)
Position: (7, 3)
Current: (6, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
Candidates:
  (7, 3) (priority 7)
  (7, 4) (priority 7)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(7, 4), (7, 3)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@@....
..X...@.X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]}
Position: (7, 4)
Position: (8, 3)
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
Position: (8, 2)
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
Current: (7, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
Candidates:
  (7, 4) (priority 7)
  (8, 3) (priority 8)
  (8, 2) (priority 8)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(7, 4), (8, 3), (8, 2)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@@@@..
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]}
Position: (8, 3)
Current: (7, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
Candidates:
  (8, 2) (priority 8)
  (8, 3) (priority 8)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(8, 3)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@@@...
..X....@X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]}
Position: (9, 3)
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
Position: (8, 1)
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
Position: (9, 2)
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
Position: (8, 3)
Position: (9, 1)
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
Current: (8, 2)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
Candidates:
  (8, 3) (priority 8)
  (9, 1) (priority 9)
  (8, 1) (priority 9)
  (9, 3) (priority 9)
  (9, 2) (priority 9)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (8, 2), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(9, 3), (8, 1), (9, 2), (8, 3), (9, 1)}
Current path:
@......X..
.@.....X..
.X@XXXXX@.
...@@@@@..
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]}
Position: (9, 2)
Position: (9, 3)
Position: (9, 4)
  (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
Current: (8, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
Candidates:
  (8, 1) (priority 9)
  (9, 1) (priority 9)
  (9, 2) (priority 9)
  (9, 3) (priority 9)
  (9, 4) (priority 9)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (8, 3), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (8, 2), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (0, 0), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(9, 2), (9, 3), (9, 4)}
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@@@@@.
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]}
Position: (9, 0)
  (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Position: (9, 1)
Position: (9, 2)
Position: (8, 0)
  (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Current: (8, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
  (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
  (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Candidates:
  (9, 1) (priority 9)
  (9, 3) (priority 9)
  (9, 2) (priority 9)
  (9, 4) (priority 9)
  (9, 0) (priority 10)
  (8, 0) (priority 10)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (8, 3), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (8, 2), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (0, 0), (8, 1), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(9, 0), (9, 1), (9, 2), (8, 0)}
Current path:
@......X..
.@.....X@.
.X@XXXXX@.
...@@@@@..
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (9, 1)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)], (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)], (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]}
Position: (9, 0)
Position: (9, 2)
Position: (8, 0)
Current: (9, 1)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
  (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
  (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Candidates:
  (9, 2) (priority 9)
  (9, 3) (priority 9)
  (8, 0) (priority 10)
  (9, 4) (priority 9)
  (9, 0) (priority 10)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (0, 2), (8, 3), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (8, 2), (9, 1), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (0, 0), (8, 1), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(9, 0), (9, 2), (8, 0)}
Current path:
@......X..
.@.....X.@
.X@XXXXX@.
...@@@@@..
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (9, 2)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)], (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)], (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]}
Position: (9, 3)
Current: (9, 2)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
  (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
  (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Candidates:
  (9, 3) (priority 9)
  (9, 4) (priority 9)
  (8, 0) (priority 10)
  (9, 0) (priority 10)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (9, 2), (0, 2), (8, 3), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (8, 2), (9, 1), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (0, 0), (8, 1), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(9, 3)}
Current path:
@......X..
.@.....X..
.X@XXXXX@@
...@@@@@..
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (9, 3)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)], (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)], (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]}
Position: (9, 4)
Current: (9, 3)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
  (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
  (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Candidates:
  (9, 4) (priority 9)
  (9, 0) (priority 10)
  (8, 0) (priority 10)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (9, 2), (0, 2), (8, 3), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (8, 2), (9, 1), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (9, 3), (0, 0), (8, 1), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: {(9, 4)}
Current path:
@......X..
.@.....X..
.X@XXXXX@.
...@@@@@.@
..X.....X.

Shorter paths:
Enter function get_shorter_paths: 
Path: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3), (9, 4)]
Tentative: {(0, 0): [], (0, 1): [(0, 0)], (1, 0): [(0, 0)], (1, 1): [(0, 0)], (0, 2): [(0, 0), (0, 1)], (2, 0): [(0, 0), (1, 0)], (2, 1): [(0, 0), (1, 0)], (2, 2): [(0, 0), (1, 1)], (0, 3): [(0, 0), (0, 1), (0, 2)], (1, 3): [(0, 0), (0, 1), (0, 2)], (3, 1): [(0, 0), (1, 0), (2, 0)], (3, 0): [(0, 0), (1, 0), (2, 0)], (3, 3): [(0, 0), (1, 1), (2, 2)], (2, 3): [(0, 0), (1, 1), (2, 2)], (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)], (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)], (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)], (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)], (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)], (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)], (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)], (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)], (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)], (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)], (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)], (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)], (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)], (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]}
Current: (9, 4)
Tentative:
  (0, 0): []
  (0, 1): [(0, 0)]
  (1, 0): [(0, 0)]
  (1, 1): [(0, 0)]
  (0, 2): [(0, 0), (0, 1)]
  (2, 0): [(0, 0), (1, 0)]
  (2, 1): [(0, 0), (1, 0)]
  (2, 2): [(0, 0), (1, 1)]
  (0, 3): [(0, 0), (0, 1), (0, 2)]
  (1, 3): [(0, 0), (0, 1), (0, 2)]
  (3, 1): [(0, 0), (1, 0), (2, 0)]
  (3, 0): [(0, 0), (1, 0), (2, 0)]
  (3, 3): [(0, 0), (1, 1), (2, 2)]
  (2, 3): [(0, 0), (1, 1), (2, 2)]
  (1, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (0, 4): [(0, 0), (0, 1), (0, 2), (0, 3)]
  (3, 4): [(0, 0), (1, 1), (2, 2), (2, 3)]
  (4, 0): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 1): [(0, 0), (1, 0), (2, 0), (3, 0)]
  (4, 4): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (4, 3): [(0, 0), (1, 1), (2, 2), (3, 3)]
  (5, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0)]
  (5, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (5, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3)]
  (6, 1): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 0): [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
  (6, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (6, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3)]
  (7, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (7, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3)]
  (8, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (8, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)]
  (9, 3): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (8, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 2): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 1): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2)]
  (9, 4): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3)]
  (9, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
  (8, 0): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 2), (8, 1)]
Candidates:
  (8, 0) (priority 10)
  (9, 0) (priority 10)
Certain: {(4, 0), (3, 4), (4, 3), (3, 1), (5, 4), (5, 1), (9, 2), (0, 2), (8, 3), (2, 2), (1, 0), (1, 3), (7, 4), (3, 0), (3, 3), (5, 0), (5, 3), (8, 2), (9, 1), (9, 4), (0, 1), (0, 4), (2, 1), (6, 1), (6, 4), (7, 3), (4, 1), (4, 4), (9, 3), (0, 0), (8, 1), (1, 1), (0, 3), (2, 0), (1, 4), (2, 3), (6, 0), (6, 3)}
Neighbors: set()
Current path:
@......X..
.@.....X..
.X@XXXXX..
...@@@@@@.
..X.....X@

@......X..
.@.....X..
.X@XXXXX..
...@@@@@@.
..X.....X@

